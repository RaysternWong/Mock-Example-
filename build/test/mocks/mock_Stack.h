/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_STACK_H
#define _MOCK_STACK_H

#include "Stack.h"
#include "CException.h"

void mock_Stack_Init(void);
void mock_Stack_Destroy(void);
void mock_Stack_Verify(void);




#define stackNew_IgnoreAndReturn(cmock_retval) stackNew_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void stackNew_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, Stack* cmock_to_return);
#define stackNew_ExpectAndReturn(length, cmock_retval) stackNew_CMockExpectAndReturn(__LINE__, length, cmock_retval)
void stackNew_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int length, Stack* cmock_to_return);
typedef Stack* (* CMOCK_stackNew_CALLBACK)(int length, int cmock_num_calls);
void stackNew_StubWithCallback(CMOCK_stackNew_CALLBACK Callback);
#define stackNew_ExpectAndThrow(length, cmock_to_throw) stackNew_CMockExpectAndThrow(__LINE__, length, cmock_to_throw)
void stackNew_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, int length, CEXCEPTION_T cmock_to_throw);
#define StackDel_Ignore() StackDel_CMockIgnore()
void StackDel_CMockIgnore(void);
#define StackDel_Expect(stackPtr) StackDel_CMockExpect(__LINE__, stackPtr)
void StackDel_CMockExpect(UNITY_LINE_TYPE cmock_line, Stack* stackPtr);
typedef void (* CMOCK_StackDel_CALLBACK)(Stack* stackPtr, int cmock_num_calls);
void StackDel_StubWithCallback(CMOCK_StackDel_CALLBACK Callback);
#define StackDel_ExpectAndThrow(stackPtr, cmock_to_throw) StackDel_CMockExpectAndThrow(__LINE__, stackPtr, cmock_to_throw)
void StackDel_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, CEXCEPTION_T cmock_to_throw);
#define stackPush_Ignore() stackPush_CMockIgnore()
void stackPush_CMockIgnore(void);
#define stackPush_Expect(stackPtr, push) stackPush_CMockExpect(__LINE__, stackPtr, push)
void stackPush_CMockExpect(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, int push);
typedef void (* CMOCK_stackPush_CALLBACK)(Stack* stackPtr, int push, int cmock_num_calls);
void stackPush_StubWithCallback(CMOCK_stackPush_CALLBACK Callback);
#define stackPush_ExpectAndThrow(stackPtr, push, cmock_to_throw) stackPush_CMockExpectAndThrow(__LINE__, stackPtr, push, cmock_to_throw)
void stackPush_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, int push, CEXCEPTION_T cmock_to_throw);
#define stackPop_IgnoreAndReturn(cmock_retval) stackPop_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void stackPop_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define stackPop_ExpectAndReturn(stackPtr, cmock_retval) stackPop_CMockExpectAndReturn(__LINE__, stackPtr, cmock_retval)
void stackPop_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, int cmock_to_return);
typedef int (* CMOCK_stackPop_CALLBACK)(Stack* stackPtr, int cmock_num_calls);
void stackPop_StubWithCallback(CMOCK_stackPop_CALLBACK Callback);
#define stackPop_ExpectAndThrow(stackPtr, cmock_to_throw) stackPop_CMockExpectAndThrow(__LINE__, stackPtr, cmock_to_throw)
void stackPop_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, CEXCEPTION_T cmock_to_throw);
#define stackisEmpty_IgnoreAndReturn(cmock_retval) stackisEmpty_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void stackisEmpty_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define stackisEmpty_ExpectAndReturn(stackPtr, cmock_retval) stackisEmpty_CMockExpectAndReturn(__LINE__, stackPtr, cmock_retval)
void stackisEmpty_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, int cmock_to_return);
typedef int (* CMOCK_stackisEmpty_CALLBACK)(Stack* stackPtr, int cmock_num_calls);
void stackisEmpty_StubWithCallback(CMOCK_stackisEmpty_CALLBACK Callback);
#define stackisEmpty_ExpectAndThrow(stackPtr, cmock_to_throw) stackisEmpty_CMockExpectAndThrow(__LINE__, stackPtr, cmock_to_throw)
void stackisEmpty_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, CEXCEPTION_T cmock_to_throw);
#define stackisFull_IgnoreAndReturn(cmock_retval) stackisFull_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void stackisFull_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define stackisFull_ExpectAndReturn(stackPtr, cmock_retval) stackisFull_CMockExpectAndReturn(__LINE__, stackPtr, cmock_retval)
void stackisFull_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, int cmock_to_return);
typedef int (* CMOCK_stackisFull_CALLBACK)(Stack* stackPtr, int cmock_num_calls);
void stackisFull_StubWithCallback(CMOCK_stackisFull_CALLBACK Callback);
#define stackisFull_ExpectAndThrow(stackPtr, cmock_to_throw) stackisFull_CMockExpectAndThrow(__LINE__, stackPtr, cmock_to_throw)
void stackisFull_CMockExpectAndThrow(UNITY_LINE_TYPE cmock_line, Stack* stackPtr, CEXCEPTION_T cmock_to_throw);

#endif
